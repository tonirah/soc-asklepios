{"pageProps":{"taskData":{"uuid":"a87974c0-84e8-46e0-8ad3-a3ec065d2fdb","name":"When is the Radiation Warning over?","difficulty":1,"showAllOptions":true,"category":"Space Radiation Protection (SRP)","dirtyCode":"class RadiationWarning {\n  Date start;\n  Hours duration;\n\n  void logWarning() {\n    // date method\n    long HOUR_IN_MS = 3600 * 1000;\n    Date end = new Date(start.getTime() + duration * HOUR_IN_MS);\n\n    // warning\n    System.out.println(\"RadiationWarning issued at \" + start + \", valid until \"\n                       + end + \" (\" + duration + \" hours).\");\n  }\n}","cleanCode":"class RadiationWarning {\n  Date start;\n  Hours duration;\n\n  void logWarning() {\n    Date end = RadiationWarning.addHours(start, duration);\n    System.out.println(\"RadiationWarning issued at \" + start + \", valid until \"\n                       + end + \" (\" + duration + \" hours).\");\n  }\n\n  // date method\n  private static Date addHours(Date date, Hours hours) {\n    long HOUR_IN_MS = 3600 * 1000;\n    return new Date(date.getTime() + hours * HOUR_IN_MS);\n  }\n}","cleanCodeHighlightedLines":"6, 11-15","comment":"Da Date direkt nicht verändert werden kann, wird der Klasse RadiationWarning eine benötigte klassenfremde Methode hinzugefügt.","inputs":[{"type":"Refactoring","options":[{"value":"Konstruktor durch eine Factory-Methode ersetzen (Replace Constructor with Factory Method)"},{"value":"Bedingung zerlegen (Decompose Conditional)"},{"value":"Klassenfremde Methode einführen (Introduce Foreign Method)","isValid":true},{"value":"Feld oder Methode verlagern (Move Field / Method)"}],"lines":"6-10"}]}},"__N_SSG":true}