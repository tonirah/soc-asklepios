{"pageProps":{"taskData":{"uuid":"4b1b900f-865d-4f91-bbcd-3977db0fac9f","name":"Reset Components","difficulty":2,"showAllOptions":false,"category":"Cabin Ventilation and Thermal Control (VTC)","dirtyCode":"class TemperatureSensor {\n  public double readTemperature(Room room) { /* ... */ }\n\n  public void reset() { /* ... */ }\n\n  //...\n}\n\nclass FanController {\n  public void reset() { /* ... */ }\n\n  public void increaseVentilation() { /* ... */ }\n\n  // ...\n}\n\n\n// usage\nvoid resetComponents(\n        TemperatureSensor temperatureSensor,\n        FanController fanController) {\n  temperatureSensor.reset();\n  fanController.reset();\n}","cleanCode":"interface IResettableComponent {\n  void reset();\n}\n\nclass TemperatureSensor implements IResettableComponent {\n  public double readTemperature(Room room) { /* ... */ }\n\n  public void reset() { /* ... */ }\n\n  //...\n}\n\nclass FanController implements IResettableComponent {\n  public void reset() { /* ... */ }\n\n  public void increaseVentilation() { /* ... */ }\n\n  // ...\n}\n\n\n// usage\nvoid resetComponents(IResettableComponent[] components) {\n  for (IResettableComponent component : components) {\n    component.reset();\n  }\n}","cleanCodeHighlightedLines":"1-3, 5, 8, 13, 14, 23-27","comment":"Durch ein kontextspezifisches Interface kann die Methode allgemeiner implementiert werden und es werden Abh√§ngigkeiten reduziert.","inputs":[{"type":"Refactoring","options":[{"value":"Delegat verbergen (Hide Delegate)"},{"value":"Vererbung durch Delegation ersetzen (Replace Inheritance with Delegation)"},{"value":"Interface extrahieren (Extract Interface)","isValid":true},{"value":"Mittelsmann entfernen (Remove Middle Man)"}],"lines":"4, 10, 19-24"}]}},"__N_SSG":true}